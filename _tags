# OASIS_START
# DO NOT EDIT (digest: c3af19c61b945f043644ae9ff4420f6f)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library imap
"lib/core/imap.cmxs": use_imap
<lib/core/*.ml{,i}>: pkg_cryptokit
<lib/core/*.ml{,i}>: pkg_sexplib
<lib/core/*.ml{,i}>: pkg_sexplib.syntax
<lib/core/*.ml{,i}>: pkg_str
<lib/core/*.ml{,i}>: pkg_ucorelib
<lib/core/*.ml{,i}>: pkg_uint
# Library imap-unix
"lib/unix/imap-unix.cmxs": use_imap-unix
<lib/unix/*.ml{,i}>: pkg_cryptokit
<lib/unix/*.ml{,i}>: pkg_sexplib
<lib/unix/*.ml{,i}>: pkg_sexplib.syntax
<lib/unix/*.ml{,i}>: pkg_ssl
<lib/unix/*.ml{,i}>: pkg_str
<lib/unix/*.ml{,i}>: pkg_ucorelib
<lib/unix/*.ml{,i}>: pkg_uint
<lib/unix/*.ml{,i}>: pkg_unix
<lib/unix/*.ml{,i}>: pkg_zip
<lib/unix/*.ml{,i}>: use_imap
# Library imap-lwt
"lib/lwt/imap-lwt.cmxs": use_imap-lwt
<lib/lwt/*.ml{,i}>: pkg_cryptokit
<lib/lwt/*.ml{,i}>: pkg_lwt
<lib/lwt/*.ml{,i}>: pkg_lwt.ssl
<lib/lwt/*.ml{,i}>: pkg_lwt.unix
<lib/lwt/*.ml{,i}>: pkg_sexplib
<lib/lwt/*.ml{,i}>: pkg_sexplib.syntax
<lib/lwt/*.ml{,i}>: pkg_str
<lib/lwt/*.ml{,i}>: pkg_ucorelib
<lib/lwt/*.ml{,i}>: pkg_uint
<lib/lwt/*.ml{,i}>: use_imap
# Library imap-gsasl
"lib/gsasl/imap-gsasl.cmxs": use_imap-gsasl
<lib/gsasl/imap-gsasl.{cma,cmxa}>: oasis_library_imap_gsasl_cclib
<lib/gsasl/*.ml{,i}>: pkg_cryptokit
<lib/gsasl/*.ml{,i}>: pkg_gsasl
<lib/gsasl/*.ml{,i}>: pkg_sexplib
<lib/gsasl/*.ml{,i}>: pkg_sexplib.syntax
<lib/gsasl/*.ml{,i}>: pkg_str
<lib/gsasl/*.ml{,i}>: pkg_ucorelib
<lib/gsasl/*.ml{,i}>: pkg_uint
<lib/gsasl/*.ml{,i}>: use_imap
# Library imap-async
"lib/async/imap-async.cmxs": use_imap-async
<lib/async/imap-async.{cma,cmxa}>: oasis_library_imap_async_cclib
<lib/async/*.ml{,i}>: pkg_async
<lib/async/*.ml{,i}>: pkg_async_ssl
<lib/async/*.ml{,i}>: pkg_cryptokit
<lib/async/*.ml{,i}>: pkg_sexplib
<lib/async/*.ml{,i}>: pkg_sexplib.syntax
<lib/async/*.ml{,i}>: pkg_str
<lib/async/*.ml{,i}>: pkg_threads
<lib/async/*.ml{,i}>: pkg_ucorelib
<lib/async/*.ml{,i}>: pkg_uint
<lib/async/*.ml{,i}>: use_imap
# Executable test_parser
<lib_test/test_parser.{native,byte}>: pkg_cryptokit
<lib_test/test_parser.{native,byte}>: pkg_oUnit
<lib_test/test_parser.{native,byte}>: pkg_sexplib
<lib_test/test_parser.{native,byte}>: pkg_sexplib.syntax
<lib_test/test_parser.{native,byte}>: pkg_str
<lib_test/test_parser.{native,byte}>: pkg_ucorelib
<lib_test/test_parser.{native,byte}>: pkg_uint
<lib_test/test_parser.{native,byte}>: use_imap
<lib_test/test_parser.{native,byte}>: custom
# Executable test_set
<lib_test/test_set.{native,byte}>: pkg_cryptokit
<lib_test/test_set.{native,byte}>: pkg_oUnit
<lib_test/test_set.{native,byte}>: pkg_sexplib
<lib_test/test_set.{native,byte}>: pkg_sexplib.syntax
<lib_test/test_set.{native,byte}>: pkg_str
<lib_test/test_set.{native,byte}>: pkg_ucorelib
<lib_test/test_set.{native,byte}>: pkg_uint
<lib_test/test_set.{native,byte}>: use_imap
<lib_test/test_set.{native,byte}>: custom
# Executable test_mutf7
<lib_test/test_mutf7.{native,byte}>: pkg_cryptokit
<lib_test/test_mutf7.{native,byte}>: pkg_oUnit
<lib_test/test_mutf7.{native,byte}>: pkg_sexplib
<lib_test/test_mutf7.{native,byte}>: pkg_sexplib.syntax
<lib_test/test_mutf7.{native,byte}>: pkg_str
<lib_test/test_mutf7.{native,byte}>: pkg_ucorelib
<lib_test/test_mutf7.{native,byte}>: pkg_uint
<lib_test/test_mutf7.{native,byte}>: use_imap
<lib_test/test_mutf7.{native,byte}>: custom
# Executable test_live
<lib_test/test_live.{native,byte}>: pkg_cryptokit
<lib_test/test_live.{native,byte}>: pkg_lwt
<lib_test/test_live.{native,byte}>: pkg_lwt.ssl
<lib_test/test_live.{native,byte}>: pkg_lwt.unix
<lib_test/test_live.{native,byte}>: pkg_oUnit
<lib_test/test_live.{native,byte}>: pkg_sexplib
<lib_test/test_live.{native,byte}>: pkg_sexplib.syntax
<lib_test/test_live.{native,byte}>: pkg_str
<lib_test/test_live.{native,byte}>: pkg_ucorelib
<lib_test/test_live.{native,byte}>: pkg_uint
<lib_test/test_live.{native,byte}>: use_imap
<lib_test/test_live.{native,byte}>: use_imap-lwt
<lib_test/test_live.{native,byte}>: custom
# Executable test_io
<lib_test/test_io.{native,byte}>: pkg_cryptokit
<lib_test/test_io.{native,byte}>: pkg_oUnit
<lib_test/test_io.{native,byte}>: pkg_sexplib
<lib_test/test_io.{native,byte}>: pkg_sexplib.syntax
<lib_test/test_io.{native,byte}>: pkg_ssl
<lib_test/test_io.{native,byte}>: pkg_str
<lib_test/test_io.{native,byte}>: pkg_ucorelib
<lib_test/test_io.{native,byte}>: pkg_uint
<lib_test/test_io.{native,byte}>: pkg_unix
<lib_test/test_io.{native,byte}>: pkg_zip
<lib_test/test_io.{native,byte}>: use_imap
<lib_test/test_io.{native,byte}>: use_imap-unix
<lib_test/*.ml{,i}>: pkg_ssl
<lib_test/*.ml{,i}>: pkg_unix
<lib_test/*.ml{,i}>: pkg_zip
<lib_test/*.ml{,i}>: use_imap-unix
<lib_test/test_io.{native,byte}>: custom
# Executable test_condstore
<lib_test/test_condstore.{native,byte}>: pkg_cryptokit
<lib_test/test_condstore.{native,byte}>: pkg_lwt
<lib_test/test_condstore.{native,byte}>: pkg_lwt.ssl
<lib_test/test_condstore.{native,byte}>: pkg_lwt.unix
<lib_test/test_condstore.{native,byte}>: pkg_oUnit
<lib_test/test_condstore.{native,byte}>: pkg_sexplib
<lib_test/test_condstore.{native,byte}>: pkg_sexplib.syntax
<lib_test/test_condstore.{native,byte}>: pkg_str
<lib_test/test_condstore.{native,byte}>: pkg_ucorelib
<lib_test/test_condstore.{native,byte}>: pkg_uint
<lib_test/test_condstore.{native,byte}>: use_imap
<lib_test/test_condstore.{native,byte}>: use_imap-lwt
<lib_test/test_condstore.{native,byte}>: custom
# Executable test_id
<lib_test/test_id.{native,byte}>: pkg_cryptokit
<lib_test/test_id.{native,byte}>: pkg_lwt
<lib_test/test_id.{native,byte}>: pkg_lwt.ssl
<lib_test/test_id.{native,byte}>: pkg_lwt.unix
<lib_test/test_id.{native,byte}>: pkg_oUnit
<lib_test/test_id.{native,byte}>: pkg_sexplib
<lib_test/test_id.{native,byte}>: pkg_sexplib.syntax
<lib_test/test_id.{native,byte}>: pkg_str
<lib_test/test_id.{native,byte}>: pkg_ucorelib
<lib_test/test_id.{native,byte}>: pkg_uint
<lib_test/test_id.{native,byte}>: use_imap
<lib_test/test_id.{native,byte}>: use_imap-lwt
<lib_test/*.ml{,i}>: pkg_lwt
<lib_test/*.ml{,i}>: pkg_lwt.ssl
<lib_test/*.ml{,i}>: pkg_lwt.unix
<lib_test/*.ml{,i}>: use_imap-lwt
<lib_test/test_id.{native,byte}>: custom
# Executable test_namespace
<lib_test/test_namespace.{native,byte}>: pkg_cryptokit
<lib_test/test_namespace.{native,byte}>: pkg_oUnit
<lib_test/test_namespace.{native,byte}>: pkg_sexplib
<lib_test/test_namespace.{native,byte}>: pkg_sexplib.syntax
<lib_test/test_namespace.{native,byte}>: pkg_str
<lib_test/test_namespace.{native,byte}>: pkg_ucorelib
<lib_test/test_namespace.{native,byte}>: pkg_uint
<lib_test/test_namespace.{native,byte}>: use_imap
<lib_test/*.ml{,i}>: pkg_cryptokit
<lib_test/*.ml{,i}>: pkg_oUnit
<lib_test/*.ml{,i}>: pkg_sexplib
<lib_test/*.ml{,i}>: pkg_sexplib.syntax
<lib_test/*.ml{,i}>: pkg_str
<lib_test/*.ml{,i}>: pkg_ucorelib
<lib_test/*.ml{,i}>: pkg_uint
<lib_test/*.ml{,i}>: use_imap
<lib_test/test_namespace.{native,byte}>: custom
# OASIS_STOP
# <lib/imap_client.ml{,i}>: syntax_camlp4o, pkg_lwt.syntax, pkg_sexplib.syntax
